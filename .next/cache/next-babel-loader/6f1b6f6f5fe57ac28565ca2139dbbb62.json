{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/app/pages/account/signin.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { css } from 'styled-components';\nimport { useRef, useState } from 'react';\nimport { Container } from '../../components/Container';\nimport fetch from 'isomorphic-fetch';\nexport default (function () {\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(LoginForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n});\n\nvar LoginForm = function LoginForm() {\n  var usernameRef = useRef(null);\n  var passwordRef = useRef(null);\n\n  var _useState = useState({\n    error: false,\n    message: ''\n  }),\n      authError = _useState[0],\n      setAuthError = _useState[1];\n\n  var _useState2 = useState({\n    error: false,\n    message: ''\n  }),\n      usernameError = _useState2[0],\n      setUsernameError = _useState2[1];\n\n  var _useState3 = useState({\n    error: false,\n    message: ''\n  }),\n      passwordError = _useState3[0],\n      setPasswordError = _useState3[1];\n\n  var checkUsername = function checkUsername(username) {\n    if (!username) {\n      return 'username is required.';\n    }\n  };\n\n  var checkPassword = function checkPassword(password) {\n    if (!password) {\n      return 'password is required.';\n    }\n  };\n\n  var _onClick =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var usernameInputVal, passwordInputVal, message, username, password, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!usernameRef.current || !passwordRef.current)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              usernameRef.current.focus();\n              passwordRef.current.focus();\n              usernameInputVal = usernameRef.current.value;\n              passwordInputVal = passwordRef.current.value; // check input value\n\n              message = checkUsername(usernameInputVal);\n\n              if (typeof message === 'string' && message.length !== 0) {\n                setUsernameError({\n                  error: true,\n                  message: message\n                });\n              } else {\n                setUsernameError({\n                  error: false\n                });\n              }\n\n              message = checkPassword(passwordInputVal);\n\n              if (typeof message === 'string' && message.length !== 0) {\n                setPasswordError({\n                  error: true,\n                  message: message\n                });\n              } else {\n                setPasswordError({\n                  error: false\n                });\n              }\n\n              if (!(typeof message === 'string' && message.length !== 0)) {\n                _context.next = 12;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 12:\n              username = usernameInputVal;\n              password = passwordInputVal;\n              response = {\n                ok: false // submit value data\n\n              };\n              _context.prev = 15;\n              _context.next = 18;\n              return fetch('/api/signin', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: _JSON$stringify({\n                  username: username,\n                  password: password\n                })\n              }).then(function (response) {\n                return response.json();\n              });\n\n            case 18:\n              response = _context.sent;\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](15);\n              // leave a log\n              setAuthError({\n                error: true,\n                message: 'Internal server error, please try again later'\n              });\n              return _context.abrupt(\"return\");\n\n            case 25:\n              console.log(response.ok);\n\n              if (response.ok) {\n                window.location.href = \"/account/dashboard\";\n              } else {\n                setAuthError({\n                  error: true,\n                  message: 'Invalid login or password.'\n                });\n              }\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[15, 21]]);\n    }));\n\n    return function onClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(FormContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(FormTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Sign in\")), __jsx(UsernameLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Username or Email\")), __jsx(UsernameInput, {\n    ref: usernameRef,\n    error: usernameError.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), __jsx(UsernameError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, usernameError.message), __jsx(PasswordLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Password\")), __jsx(PasswordInput, {\n    ref: passwordRef,\n    error: passwordError.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), __jsx(PasswordError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, passwordError.message), __jsx(AuthError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, authError.message), __jsx(SubmitButton, {\n    onClick: function onClick() {\n      return _onClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Sign in\")));\n}; /// Form\n\n\nvar FormContainer = styled.div.withConfig({\n  displayName: \"signin__FormContainer\",\n  componentId: \"sc-1nr4j94-0\"\n})([\"font-family:'Raleway',sans-serif;padding:50px 90px 90px;border-radius:15px;margin:0 auto;justify-content:space-around;box-shadow:1px 1px 5px #9aa3ab;\"]);\nvar FormTitle = styled.div.withConfig({\n  displayName: \"signin__FormTitle\",\n  componentId: \"sc-1nr4j94-1\"\n})([\"font-size:42px;text-align:center;color:#446456;\"]); /// Label\n\nvar LabelBaseStyle = css([\"margin:0;opacity:0.7;font-size:19px;font-weight:500;\"]);\nvar UsernameLabel = styled.div.withConfig({\n  displayName: \"signin__UsernameLabel\",\n  componentId: \"sc-1nr4j94-2\"\n})([\"\", \"\"], LabelBaseStyle);\nvar PasswordLabel = styled.div.withConfig({\n  displayName: \"signin__PasswordLabel\",\n  componentId: \"sc-1nr4j94-3\"\n})([\"\", \"\"], LabelBaseStyle); /// Input\n\nvar InputBaseStyle = css([\"width:200px;margin-bottom:10px;border-radius:3px;border:\", \";padding:8px;\"], function (props) {\n  return props.error && '1px solid red' || '1px solid #dee7ec';\n});\nvar UsernameInput = styled.input.withConfig({\n  displayName: \"signin__UsernameInput\",\n  componentId: \"sc-1nr4j94-4\"\n})([\"\", \"\"], InputBaseStyle);\nvar PasswordInput = styled.input.attrs(function () {\n  return {\n    type: 'password'\n  };\n}).withConfig({\n  displayName: \"signin__PasswordInput\",\n  componentId: \"sc-1nr4j94-5\"\n})([\"\", \"\"], InputBaseStyle);\nvar SubmitButton = styled.button.withConfig({\n  displayName: \"signin__SubmitButton\",\n  componentId: \"sc-1nr4j94-6\"\n})([\"display:block;background-color:white;font-family:'Raleway',sans-serif;font-size:1em;margin-top:1em;padding:0.5em 1em;border:1px solid #9aa3ab;border-radius:3px;opacity:0.5;transition:.5s;&:hover{opacity:1;}\"]); // Error Message Area\n\nvar AuthError = styled.div.withConfig({\n  displayName: \"signin__AuthError\",\n  componentId: \"sc-1nr4j94-7\"\n})([\"color:red;\"]);\nvar UsernameError = styled.div.withConfig({\n  displayName: \"signin__UsernameError\",\n  componentId: \"sc-1nr4j94-8\"\n})([\"color:red;\"]);\nvar PasswordError = styled.div.withConfig({\n  displayName: \"signin__PasswordError\",\n  componentId: \"sc-1nr4j94-9\"\n})([\"color:red;\"]);","map":{"version":3,"sources":["/app/pages/account/signin.tsx"],"names":["styled","css","useRef","useState","Container","fetch","LoginForm","usernameRef","passwordRef","error","message","authError","setAuthError","usernameError","setUsernameError","passwordError","setPasswordError","checkUsername","username","checkPassword","password","onClick","current","focus","usernameInputVal","value","passwordInputVal","length","response","ok","method","headers","body","then","json","console","log","window","location","href","FormContainer","div","FormTitle","LabelBaseStyle","UsernameLabel","PasswordLabel","InputBaseStyle","props","UsernameInput","input","PasswordInput","attrs","type","SubmitButton","button","AuthError","UsernameError","PasswordError"],"mappings":"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","sourcesContent":["import styled, { css } from 'styled-components'\r\nimport { FC, useRef, useState, MutableRefObject } from 'react'\r\nimport { Container } from '../../components/Container'\r\nimport fetch from 'isomorphic-fetch'\r\n\r\nexport default () => (\r\n    <Container>\r\n        <LoginForm />\r\n    </Container>\r\n)\r\n\r\nconst LoginForm: FC = () => {\r\n    const usernameRef: MutableRefObject<HTMLInputElement | null> = useRef(null)\r\n    const passwordRef: MutableRefObject<HTMLInputElement | null> = useRef(null)\r\n\r\n    type RuntimeError = {\r\n        error?: boolean\r\n        message?: string\r\n    }\r\n\r\n    const [authError, setAuthError] = useState<RuntimeError>({\r\n        error: false,\r\n        message: ''\r\n    })\r\n\r\n    const [usernameError, setUsernameError] = useState<RuntimeError>({\r\n        error: false,\r\n        message: ''\r\n    })\r\n\r\n    const [passwordError, setPasswordError] = useState<RuntimeError>({\r\n        error: false,\r\n        message: ''\r\n    })\r\n\r\n    type ErrorMessage = string | void\r\n\r\n    const checkUsername = (username: string): ErrorMessage => {\r\n        if (!username) {\r\n            return 'username is required.'\r\n        }\r\n    }\r\n\r\n    const checkPassword = (password: string): ErrorMessage => {\r\n        if (!password) {\r\n            return 'password is required.'\r\n        }\r\n    }\r\n\r\n    const onClick = async () => {\r\n        if (!usernameRef.current || !passwordRef.current) {\r\n            return\r\n        }\r\n\r\n        usernameRef.current.focus()\r\n        passwordRef.current.focus()\r\n\r\n        const usernameInputVal = usernameRef.current.value\r\n        const passwordInputVal = passwordRef.current.value\r\n\r\n        // check input value\r\n        let message: ErrorMessage\r\n\r\n        message = checkUsername(usernameInputVal)\r\n\r\n        if (typeof message === 'string' && message.length !== 0) {\r\n            setUsernameError({\r\n                error: true,\r\n                message: message\r\n            })\r\n        } else {\r\n            setUsernameError({ error: false })\r\n        }\r\n\r\n        message = checkPassword(passwordInputVal)\r\n\r\n        if (typeof message === 'string' && message.length !== 0) {\r\n            setPasswordError({\r\n                error: true,\r\n                message: message\r\n            })\r\n        } else {\r\n            setPasswordError({ error: false })\r\n        }\r\n\r\n        if (typeof message === 'string' && message.length !== 0) {\r\n            return\r\n        }\r\n\r\n        const username = usernameInputVal\r\n        const password = passwordInputVal\r\n\r\n        let response: LoginAuthResponse = {\r\n            ok: false\r\n        }\r\n\r\n        // submit value data\r\n\r\n        try {\r\n            response = await fetch('/api/signin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password\r\n                },\r\n                )\r\n            }).then((response: Response) => response.json())\r\n        } catch (e) {\r\n            // leave a log\r\n\r\n            setAuthError({\r\n                error: true,\r\n                message: 'Internal server error, please try again later'\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        console.log(response.ok)\r\n\r\n        if (response.ok) {\r\n            window.location.href = `/account/dashboard`\r\n        } else {\r\n            setAuthError({\r\n                error: true,\r\n                message: 'Invalid login or password.'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <FormTitle>\r\n                <p>Sign in</p>\r\n            </FormTitle>\r\n            <UsernameLabel>\r\n                <p>Username or Email</p>\r\n            </UsernameLabel>\r\n            <UsernameInput\r\n                ref={usernameRef}\r\n                error={usernameError.error} />\r\n            <UsernameError>\r\n                {usernameError.message}\r\n            </UsernameError>\r\n            <PasswordLabel>\r\n                <p>Password</p>\r\n            </PasswordLabel>\r\n            <PasswordInput\r\n                ref={passwordRef}\r\n                error={passwordError.error} />\r\n            <PasswordError>\r\n                {passwordError.message}\r\n            </PasswordError>\r\n            <AuthError>\r\n                {authError.message}\r\n            </AuthError>\r\n            <SubmitButton onClick={() => onClick()}>\r\n                <span>Sign in</span>\r\n            </SubmitButton>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\n/// Form\r\nconst FormContainer = styled.div`\r\n    font-family: 'Raleway', sans-serif;\r\n    padding: 50px 90px 90px;\r\n    border-radius: 15px;\r\n    margin: 0 auto;\r\n    justify-content: space-around;\r\n    box-shadow: 1px 1px 5px #9aa3ab;\r\n`\r\n\r\nconst FormTitle = styled.div`\r\n    font-size: 42px;\r\n    text-align: center;\r\n    color: #446456;\r\n`\r\n\r\n/// Label\r\nconst LabelBaseStyle = css`\r\n    margin: 0;\r\n    opacity: 0.7;\r\n    font-size: 19px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst UsernameLabel = styled.div`\r\n    ${LabelBaseStyle}\r\n`\r\n\r\nconst PasswordLabel = styled.div`\r\n    ${LabelBaseStyle}\r\n`\r\n\r\n/// Input\r\ntype Props = {\r\n    error?: boolean\r\n}\r\n\r\nconst InputBaseStyle = css<Props>`\r\n    width: 200px;\r\n    margin-bottom: 10px;\r\n    border-radius: 3px;\r\n    border: ${props => props.error && '1px solid red' || '1px solid #dee7ec'};\r\n    padding: 8px;\r\n`\r\n\r\nconst UsernameInput = styled.input`\r\n    ${InputBaseStyle}\r\n`\r\n\r\nconst PasswordInput = styled.input.attrs(() => ({\r\n    type: 'password',\r\n}))`\r\n    ${InputBaseStyle}\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n    display: block;\r\n    background-color: white;\r\n    font-family: 'Raleway', sans-serif;\r\n    font-size: 1em;\r\n    margin-top: 1em;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid #9aa3ab;\r\n    border-radius: 3px;\r\n    opacity: 0.5;\r\n    transition: .5s;\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\n// Error Message Area\r\nconst AuthError = styled.div`\r\n    color: red;\r\n`\r\n\r\nconst UsernameError = styled.div`\r\n    color: red;\r\n`\r\n\r\nconst PasswordError = styled.div`\r\n    color: red;\r\n`"]},"metadata":{},"sourceType":"module"}