{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/app/pages/account/signin.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled, { css } from 'styled-components';\nimport { useRef, useState } from 'react';\nimport { Container } from '../../components/Container';\nimport fetch from 'isomorphic-fetch';\nexport default (() => __jsx(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(LoginForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n})));\n\nconst LoginForm = () => {\n  const usernameRef = useRef(null);\n  const passwordRef = useRef(null);\n  const {\n    0: authError,\n    1: setAuthError\n  } = useState({\n    error: false,\n    message: ''\n  });\n  const {\n    0: usernameError,\n    1: setUsernameError\n  } = useState({\n    error: false,\n    message: ''\n  });\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState({\n    error: false,\n    message: ''\n  });\n\n  const checkUsername = username => {\n    if (!username) {\n      return 'username is required.';\n    }\n  };\n\n  const checkPassword = password => {\n    if (!password) {\n      return 'password is required.';\n    }\n  };\n\n  const onClick = async () => {\n    if (!usernameRef.current || !passwordRef.current) {\n      return;\n    }\n\n    usernameRef.current.focus();\n    passwordRef.current.focus();\n    const usernameInputVal = usernameRef.current.value;\n    const passwordInputVal = passwordRef.current.value; // check input value\n\n    let message;\n    message = checkUsername(usernameInputVal);\n\n    if (typeof message === 'string' && message.length !== 0) {\n      setUsernameError({\n        error: true,\n        message: message\n      });\n    } else {\n      setUsernameError({\n        error: false\n      });\n    }\n\n    message = checkPassword(passwordInputVal);\n\n    if (typeof message === 'string' && message.length !== 0) {\n      setPasswordError({\n        error: true,\n        message: message\n      });\n    } else {\n      setPasswordError({\n        error: false\n      });\n    }\n\n    if (typeof message === 'string' && message.length !== 0) {\n      return;\n    }\n\n    const username = usernameInputVal;\n    const password = passwordInputVal;\n    let response = {\n      ok: false // submit value data\n\n    };\n\n    try {\n      response = await fetch('/api/signin', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          username: username,\n          password: password\n        })\n      }).then(response => response.json());\n    } catch (e) {\n      // leave a log\n      setAuthError({\n        error: true,\n        message: 'Internal server error, please try again later'\n      });\n      return;\n    }\n\n    console.log(response.ok);\n\n    if (response.ok) {\n      window.location.href = `/account/dashboard`;\n    } else {\n      setAuthError({\n        error: true,\n        message: 'Invalid login or password.'\n      });\n    }\n  };\n\n  return __jsx(FormContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, __jsx(FormTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Sign in\")), __jsx(UsernameLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Username or Email\")), __jsx(UsernameInput, {\n    ref: usernameRef,\n    error: usernameError.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), __jsx(UsernameError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, usernameError.message), __jsx(PasswordLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Password\")), __jsx(PasswordInput, {\n    ref: passwordRef,\n    error: passwordError.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), __jsx(PasswordError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, passwordError.message), __jsx(AuthError, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, authError.message), __jsx(SubmitButton, {\n    onClick: () => onClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Sign in\")));\n}; /// Form\n\n\nconst FormContainer = styled.div.withConfig({\n  displayName: \"signin__FormContainer\",\n  componentId: \"sc-1nr4j94-0\"\n})([\"font-family:'Raleway',sans-serif;padding:50px 90px 90px;border-radius:15px;margin:0 auto;justify-content:space-around;box-shadow:1px 1px 5px #9aa3ab;\"]);\nconst FormTitle = styled.div.withConfig({\n  displayName: \"signin__FormTitle\",\n  componentId: \"sc-1nr4j94-1\"\n})([\"font-size:42px;text-align:center;color:#446456;\"]); /// Label\n\nconst LabelBaseStyle = css([\"margin:0;opacity:0.7;font-size:19px;font-weight:500;\"]);\nconst UsernameLabel = styled.div.withConfig({\n  displayName: \"signin__UsernameLabel\",\n  componentId: \"sc-1nr4j94-2\"\n})([\"\", \"\"], LabelBaseStyle);\nconst PasswordLabel = styled.div.withConfig({\n  displayName: \"signin__PasswordLabel\",\n  componentId: \"sc-1nr4j94-3\"\n})([\"\", \"\"], LabelBaseStyle); /// Input\n\nconst InputBaseStyle = css([\"width:200px;margin-bottom:10px;border-radius:3px;border:\", \";padding:8px;\"], props => props.error && '1px solid red' || '1px solid #dee7ec');\nconst UsernameInput = styled.input.withConfig({\n  displayName: \"signin__UsernameInput\",\n  componentId: \"sc-1nr4j94-4\"\n})([\"\", \"\"], InputBaseStyle);\nconst PasswordInput = styled.input.attrs(() => ({\n  type: 'password'\n})).withConfig({\n  displayName: \"signin__PasswordInput\",\n  componentId: \"sc-1nr4j94-5\"\n})([\"\", \"\"], InputBaseStyle);\nconst SubmitButton = styled.button.withConfig({\n  displayName: \"signin__SubmitButton\",\n  componentId: \"sc-1nr4j94-6\"\n})([\"display:block;background-color:white;font-family:'Raleway',sans-serif;font-size:1em;margin-top:1em;padding:0.5em 1em;border:1px solid #9aa3ab;border-radius:3px;opacity:0.5;transition:.5s;&:hover{opacity:1;}\"]); // Error Message Area\n\nconst AuthError = styled.div.withConfig({\n  displayName: \"signin__AuthError\",\n  componentId: \"sc-1nr4j94-7\"\n})([\"color:red;\"]);\nconst UsernameError = styled.div.withConfig({\n  displayName: \"signin__UsernameError\",\n  componentId: \"sc-1nr4j94-8\"\n})([\"color:red;\"]);\nconst PasswordError = styled.div.withConfig({\n  displayName: \"signin__PasswordError\",\n  componentId: \"sc-1nr4j94-9\"\n})([\"color:red;\"]);","map":{"version":3,"sources":["/app/pages/account/signin.tsx"],"names":["styled","css","useRef","useState","Container","fetch","LoginForm","usernameRef","passwordRef","authError","setAuthError","error","message","usernameError","setUsernameError","passwordError","setPasswordError","checkUsername","username","checkPassword","password","onClick","current","focus","usernameInputVal","value","passwordInputVal","length","response","ok","method","headers","body","then","json","e","console","log","window","location","href","FormContainer","div","FormTitle","LabelBaseStyle","UsernameLabel","PasswordLabel","InputBaseStyle","props","UsernameInput","input","PasswordInput","attrs","type","SubmitButton","button","AuthError","UsernameError","PasswordError"],"mappings":"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","sourcesContent":["import styled, { css } from 'styled-components'\r\nimport { FC, useRef, useState, MutableRefObject } from 'react'\r\nimport { Container } from '../../components/Container'\r\nimport fetch from 'isomorphic-fetch'\r\n\r\nexport default () => (\r\n    <Container>\r\n        <LoginForm />\r\n    </Container>\r\n)\r\n\r\nconst LoginForm: FC = () => {\r\n    const usernameRef: MutableRefObject<HTMLInputElement | null> = useRef(null)\r\n    const passwordRef: MutableRefObject<HTMLInputElement | null> = useRef(null)\r\n\r\n    type RuntimeError = {\r\n        error?: boolean\r\n        message?: string\r\n    }\r\n\r\n    const [authError, setAuthError] = useState<RuntimeError>({\r\n        error: false,\r\n        message: ''\r\n    })\r\n\r\n    const [usernameError, setUsernameError] = useState<RuntimeError>({\r\n        error: false,\r\n        message: ''\r\n    })\r\n\r\n    const [passwordError, setPasswordError] = useState<RuntimeError>({\r\n        error: false,\r\n        message: ''\r\n    })\r\n\r\n    type ErrorMessage = string | void\r\n\r\n    const checkUsername = (username: string): ErrorMessage => {\r\n        if (!username) {\r\n            return 'username is required.'\r\n        }\r\n    }\r\n\r\n    const checkPassword = (password: string): ErrorMessage => {\r\n        if (!password) {\r\n            return 'password is required.'\r\n        }\r\n    }\r\n\r\n    const onClick = async () => {\r\n        if (!usernameRef.current || !passwordRef.current) {\r\n            return\r\n        }\r\n\r\n        usernameRef.current.focus()\r\n        passwordRef.current.focus()\r\n\r\n        const usernameInputVal = usernameRef.current.value\r\n        const passwordInputVal = passwordRef.current.value\r\n\r\n        // check input value\r\n        let message: ErrorMessage\r\n\r\n        message = checkUsername(usernameInputVal)\r\n\r\n        if (typeof message === 'string' && message.length !== 0) {\r\n            setUsernameError({\r\n                error: true,\r\n                message: message\r\n            })\r\n        } else {\r\n            setUsernameError({ error: false })\r\n        }\r\n\r\n        message = checkPassword(passwordInputVal)\r\n\r\n        if (typeof message === 'string' && message.length !== 0) {\r\n            setPasswordError({\r\n                error: true,\r\n                message: message\r\n            })\r\n        } else {\r\n            setPasswordError({ error: false })\r\n        }\r\n\r\n        if (typeof message === 'string' && message.length !== 0) {\r\n            return\r\n        }\r\n\r\n        const username = usernameInputVal\r\n        const password = passwordInputVal\r\n\r\n        let response: LoginAuthResponse = {\r\n            ok: false\r\n        }\r\n\r\n        // submit value data\r\n\r\n        try {\r\n            response = await fetch('/api/signin', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    password: password\r\n                },\r\n                )\r\n            }).then((response: Response) => response.json())\r\n        } catch (e) {\r\n            // leave a log\r\n\r\n            setAuthError({\r\n                error: true,\r\n                message: 'Internal server error, please try again later'\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        console.log(response.ok)\r\n\r\n        if (response.ok) {\r\n            window.location.href = `/account/dashboard`\r\n        } else {\r\n            setAuthError({\r\n                error: true,\r\n                message: 'Invalid login or password.'\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <FormTitle>\r\n                <p>Sign in</p>\r\n            </FormTitle>\r\n            <UsernameLabel>\r\n                <p>Username or Email</p>\r\n            </UsernameLabel>\r\n            <UsernameInput\r\n                ref={usernameRef}\r\n                error={usernameError.error} />\r\n            <UsernameError>\r\n                {usernameError.message}\r\n            </UsernameError>\r\n            <PasswordLabel>\r\n                <p>Password</p>\r\n            </PasswordLabel>\r\n            <PasswordInput\r\n                ref={passwordRef}\r\n                error={passwordError.error} />\r\n            <PasswordError>\r\n                {passwordError.message}\r\n            </PasswordError>\r\n            <AuthError>\r\n                {authError.message}\r\n            </AuthError>\r\n            <SubmitButton onClick={() => onClick()}>\r\n                <span>Sign in</span>\r\n            </SubmitButton>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\n/// Form\r\nconst FormContainer = styled.div`\r\n    font-family: 'Raleway', sans-serif;\r\n    padding: 50px 90px 90px;\r\n    border-radius: 15px;\r\n    margin: 0 auto;\r\n    justify-content: space-around;\r\n    box-shadow: 1px 1px 5px #9aa3ab;\r\n`\r\n\r\nconst FormTitle = styled.div`\r\n    font-size: 42px;\r\n    text-align: center;\r\n    color: #446456;\r\n`\r\n\r\n/// Label\r\nconst LabelBaseStyle = css`\r\n    margin: 0;\r\n    opacity: 0.7;\r\n    font-size: 19px;\r\n    font-weight: 500;\r\n`\r\n\r\nconst UsernameLabel = styled.div`\r\n    ${LabelBaseStyle}\r\n`\r\n\r\nconst PasswordLabel = styled.div`\r\n    ${LabelBaseStyle}\r\n`\r\n\r\n/// Input\r\ntype Props = {\r\n    error?: boolean\r\n}\r\n\r\nconst InputBaseStyle = css<Props>`\r\n    width: 200px;\r\n    margin-bottom: 10px;\r\n    border-radius: 3px;\r\n    border: ${props => props.error && '1px solid red' || '1px solid #dee7ec'};\r\n    padding: 8px;\r\n`\r\n\r\nconst UsernameInput = styled.input`\r\n    ${InputBaseStyle}\r\n`\r\n\r\nconst PasswordInput = styled.input.attrs(() => ({\r\n    type: 'password',\r\n}))`\r\n    ${InputBaseStyle}\r\n`\r\n\r\nconst SubmitButton = styled.button`\r\n    display: block;\r\n    background-color: white;\r\n    font-family: 'Raleway', sans-serif;\r\n    font-size: 1em;\r\n    margin-top: 1em;\r\n    padding: 0.5em 1em;\r\n    border: 1px solid #9aa3ab;\r\n    border-radius: 3px;\r\n    opacity: 0.5;\r\n    transition: .5s;\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\n// Error Message Area\r\nconst AuthError = styled.div`\r\n    color: red;\r\n`\r\n\r\nconst UsernameError = styled.div`\r\n    color: red;\r\n`\r\n\r\nconst PasswordError = styled.div`\r\n    color: red;\r\n`"]},"metadata":{},"sourceType":"module"}