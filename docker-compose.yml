version: "3"

services:
  frontend:
    image: node:10.16.2-alpine
    command: "npm run dev"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    working_dir: /app
    environment:
      - NODE_ENV=development
  userservice-init:
    image: golang:1.12.9-alpine3.10
    command: |
      sh -c "
      apk add --no-cache git;
      find -name '*.go' |\
       egrep -v 'pb|test' |\
       xargs -I{} go build -o /dev/null {}"
    volumes:
      - "./userservice:/go/src/user"
      - "gopkg:/go/pkg/mod/"
      - "golcpkg:/usr/local/go/pkg/"
    working_dir: /go/src/user
    environment:
      - GO111MODULE=on
  userservice:
    image: golang:1.12.9-alpine3.10
    command: "go run server/main.go"
    volumes:
      - "./userservice:/go/src/user"
      - "gopkg:/go/pkg/mod/"
      - "golcpkg:/usr/local/go/pkg/"
    ports: 
      - "9090:9090"
    working_dir: /go/src/user
    environment:
      - GO111MODULE=on
      - AES_KEY=${AES_KEY}
  userservice_gateway:
    image: golang:1.12.9-alpine3.10
    command: "go run gateway/main.go"
    volumes:
      - "./userservice:/go/src/user"
      - "gopkg:/go/pkg/mod/"
      - "golcpkg:/usr/local/go/pkg/"
    ports: 
      - "8081:8081"
    working_dir: /go/src/user
    environment:
      - GO111MODULE=on
  db:
    image: "mongo:3.4.22-xenial"
    volumes:
      - "db:/data/db"
      - "configdb:/data/configdb"
    ports:
      - "27017:27017"
volumes:
  db:
  configdb:
  gopkg:
  golcpkg: